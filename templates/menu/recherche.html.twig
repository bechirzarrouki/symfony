{% extends 'base.html.twig' %}
{% set user_id = app.session.get('user_id') %}
{% block title %}Home - Purple Social
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" href="{{ asset('css/menu.css') }}">
    <link rel="stylesheet" href="{{ asset('css/investisementA.css') }}">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
{% endblock %}
{% set userid = app.session.get('user_id') %}
{% block body %}
	{% include 'components/navbar1.html.twig' %}
	{% include 'components/sidebar.html.twig' %}
    <script>
    function openMessageModal(id) {
    document.getElementById("messageModal" + id).style.display = "block";
}
function closeMessageModal(id) {
    document.getElementById("messageModal" + id).style.display = "none";
}
    </script>
	<div class="post-container">
		 <div class="posts-feed">
            {% for post in posts %}
            <div class="post">
                <div class="post-header">
                    <div class="post-user">
                        <img src="{{ asset('uploads/profile_images/' ~ post.author.getProfileImage()) }}" alt="Avatar" class="post-avatar">
                        <div class="post-user-info">
                            <h4>{{ post.author.username }}</h4>
                           <div class="date-time">{{post.getCreatedAt()|date('Y-m-d H:i:s')}}</div>
                        </div>
                    </div>
                    {% if user_id == post.author.id %}
                    <div class="post-controls">
                        <a  onclick="editPost({{ post.id }})"> <i class="fas fa-edit"></i></a>
                        <form method="post" action="{{ path('post_delete', { id: post.id }) }}" style="display:inline;">
                            <button type="submit"><i class="fas fa-trash-alt"></i></button>
                        </form>
                    </div>
                    {% endif %}
                </div>
                <div class="post-content">
                    <p class="post-text"></p>
                    <span class="post-text" id="post-content-{{ post.id }}">
                                    {{ post.content }}
                    </span>
                    <div class="post-edit-form" id="post-edit-form-{{ post.id }}" style="display:none;">
                                <form method="post" action="{{ path('post_edit', { id: post.id }) }}">
                                    <input type="text" name="post_content" value="{{ post.content }}" required>
                                    <button type="submit">Save</button>
                                    <button type="button" onclick="cancelPostEdit({{ post.id }})">Cancel</button>
                                </form>
                     </div>
                    {% if post.image %}
                    <img src="{{ asset('/uploads/posts/' ~ post.image) }}" alt="Post image" class="post-image" style="width:300px;height:300px;">
                    {% endif %}
                    <div class="post-stats">
                        <div class="like-section">
                        <form method="POST" action="{{ path('post_like', {'id': post.id}) }}" class="like-form">
                            <button type="submit" class="like-button {% if post.isLikedByUser(app.user) %}liked{% endif %}">
                                <i class="fas fa-heart"></i>
                                <span class="like-count">{{ post.likes|length }}</span>
                            </button>
                        </form>
                    </div>
                    </div>
                    
                    <!-- Display Comments -->
<div class="post-comments">
    {% for comment in post.comments %}
    <div class="comment" style="display: flex; justify-content: space-between; align-items: center;">
        <div class="comment-info">
            <strong>{{ comment.author ? comment.author.username : 'Anonymous' }}</strong>
            <span class="comment-text" id="comment-content-{{ comment.id }}">
                {{ comment.content }}
            </span>
        </div>
         {% if user_id == comment.author.id %}
        <div class="comment-actions">
            <button class="edit-comment-btn" onclick="editComment({{ comment.id }})" style="background:none; border:none; cursor:pointer;">
                <i class="fas fa-edit"></i>
            </button>
            <form method="post" action="{{ path('comment_delete', { id: comment.id }) }}" style="display:inline;">
                <button type="submit" class="delete-comment" style="background:none; border:none; padding:0; cursor:pointer;">
                    <i class="fas fa-trash-alt"></i>
                </button>
            </form>
        </div>
        {% endif %}

                            <!-- Edit Form (Hidden by default) -->
                            <div class="comment-edit-form" id="comment-edit-form-{{ comment.id }}" style="display:none;">
                                <form method="post" action="{{ path('comment_edit', { id: comment.id }) }}">
                                    <input type="text" name="comment_content" value="{{ comment.content }}" required>
                                    <button type="submit">Save</button>
                                    <button type="button" onclick="cancelEdit({{ comment.id }})">Cancel</button>
                                </form>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                    
                    <!-- Comment Box -->
                    <div class="comment-box">
                        <form method="post" action="{{ path('comment_new', { postId: post.id }) }}">
                            <input type="text" name="comment_content" placeholder="Post a comment..." class="comment-input" required>
                            <button type="submit" class="btn-post">Post</button>
                        </form>
                    </div>
                    
                </div>
            </div>
            
            {% else %}
            <p>No posts yet.</p>
            {% endfor %}
        </div>
    </main>
	</div>

	<!-- Suggested Users Sidebar -->
	<div class="suggested-users-sidebar">
		<div class="suggested-users-container">
			<div class="user-list">


				{% for user in users %}
					<div class="user-item">
						{% if user.getProfileImage() %}
							<img src="{{ asset(user.getProfileImage()) }}" alt="Profile" class="suggested-user-img">
						{% else %}
							<img src="{{ asset('images/default-avatar.jpg') }}" alt="Default Profile" class="suggested-user-img">
						{% endif %}
						<div class="user-info">
							<h4>{{ user.username }}</h4>
							<button class="follow-btn">Follow</button>
						</div>
					</div>
				{% endfor %}
			</div>
		</div>
	</div>


	<script>
	document.addEventListener('DOMContentLoaded', function () {
    // Toggle investment details
    const investmentContents = document.querySelectorAll('.investment-content');
    investmentContents.forEach(function (investmentContent) {
        investmentContent.addEventListener('click', function () {
            const investmentBox = investmentContent.closest('.investment-box');
            const investmentDetails = investmentBox.querySelector('.investment-details');
            if (investmentDetails) {
                const currentDisplay = investmentDetails.style.display;
                investmentDetails.style.display = currentDisplay === 'block' ? 'none' : 'block';
            }
        });
    });

    // Message modal functionality
    const messageIcons = document.querySelectorAll('.message-icon');
    const modal = document.getElementById('messageModal');
    const closeModal = document.querySelector('.message-close-btn');
    const sendMessageBtn = document.getElementById('sendMessageBtn');
    const messageText = document.getElementById('messageText');
    const recipientIdInput = document.getElementById('recipientId');

    // Open modal when clicking on message icon
    

    // Close modal
    closeModal.addEventListener('click', function () {
        modal.style.display = 'none';
    });

    // Send message functionality
    sendMessageBtn.addEventListener('click', function () {
        const messageContent = messageText.value.trim();
        const recipientId = recipientIdInput.value;

        if (!messageContent) {
            alert('Please enter a message.');
            return;
        }

        fetch('/message/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                sender: currentUserId, // Assuming currentUserId is available
                recipient: recipientId,
                content: messageContent
            })
        }).then(response => {
            if (!response.ok) {
                throw new Error('Error sending the message.');
            }
            return response.json();
        }).then(data => {
            alert('Message sent successfully!');
            messageText.value = ''; // Clear input
            modal.style.display = 'none'; // Close modal
        }).catch(error => {
            console.error('Error:', error);
        });
    });

    // Fetch investment returns dynamically
    investmentContents.forEach(function (investmentContent) {
        investmentContent.addEventListener('click', function () {
            const investmentDetails = investmentContent.nextElementSibling;
            if (!investmentDetails || !investmentDetails.classList.contains('investment-details')) return;

            const investmentId = investmentContent.getAttribute('data-investment-id');
            const returnsContainer = investmentDetails.querySelector('.returns-list');

            // Load returns only if not already loaded
            if (returnsContainer && returnsContainer.innerHTML.trim() === '') {
                fetch(`/api/investment/${investmentId}/returns`)
                    .then(response => response.json())
                    .then(data => {
                        returnsContainer.innerHTML = ''; // Clear previous content
                        if (data.length === 0) {
                            returnsContainer.innerHTML = '<p>No returns found for this investment.</p>';
                        } else {
                            data.forEach(returnItem => {
                                returnsContainer.innerHTML += `
                                    <div class="return-item">
                                        <p><strong>Description:</strong> ${returnItem.description}</p>
                                        <p><strong>Type:</strong> ${returnItem.typeReturn}</p>
                                        <p><strong>Tax Rendement:</strong> ${returnItem.taxRendement}</p>
                                        <p><strong>Date Deadline:</strong> ${returnItem.dateDeadline}</p>
                                        <p><strong>Status:</strong> ${returnItem.status}</p>
                                    </div>
                                `;
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching returns:', error);
                        returnsContainer.innerHTML = '<p>Error loading returns.</p>';
                    });
            }
        });
    });
});

	</script>
{% endblock %}
